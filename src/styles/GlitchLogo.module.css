.container {
  /* Constrain container to logo dimensions */
  /* width: 100%; */
  max-width: var(--logo-width);
  aspect-ratio: 16/9;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
  cursor: default;
  /* Prevent any overflow */
}

.logoImage {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  /* aspect-ratio: 16/9; */
  isolation: isolate;
  /* overflow: hidden; */

  /* robot suggestion */
  transition: filter 0.3s ease-out, transform 0.3s ease-out;
  will-change: transform;
  transform: translate3d(0, 0, 0);
}

/* Hover state */
.container:hover .wrapper {
  filter: contrast(120%) hue-rotate(-85deg) brightness(110%);
  transform: scale(1.02) perspective(500px) rotateX(2deg);
}

.container:hover .wrapper::before {
  opacity: 1;
}

/* Add subtle distortion to the ASCII on hover */
.container:hover .asciiArt {
  animation: hoverDistort 2s infinite alternate;
}

@keyframes hoverDistort {
  0% {
    transform: skew(0deg) scale(1);
    filter: blur(0px);
  }

  25% {
    transform: skew(-1deg) scale(1.01);
    filter: blur(0.3px);
  }

  75% {
    transform: skew(1deg) scale(0.99);
    filter: blur(0.1px);
  }

  100% {
    transform: skew(0deg) scale(1);
    filter: blur(0px);
  }
}

/* Clean snap-back transition */
.container,
.container * {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Optional: Add glitch effect on hover exit */
.container:not(:hover) .wrapper {
  animation: exitGlitch 0.4s ease-out;
}

@keyframes exitGlitch {
  0% {
    transform: scale(1.02) perspective(500px) rotateX(2deg);
    filter: contrast(120%) hue-rotate(-15deg) brightness(110%);
  }

  20% {
    transform: scale(1.01) perspective(500px) rotateX(-1deg) skew(2deg);
    filter: contrast(150%) hue-rotate(5deg) brightness(120%);
  }

  100% {
    transform: scale(1) perspective(500px) rotateX(0deg);
    filter: contrast(100%) hue-rotate(0deg) brightness(100%);
  }
}

/* begin robot suggestions */
.wrapper::before {
  content: '';
  position: absolute;
  inset: -50%;
  /* Extend well beyond boundaries */
  width: 0;
  /* Make gradient area larger than container */
  height: 0;
  background: radial-gradient(circle at center,
      rgba(233, 54, 221, 0) 0%,
      rgba(233, 54, 221, 0) 10%,
      rgba(233, 54, 221, 0) 20%,
      rgba(233, 54, 221, 0) 5%);
  opacity: 0;
  transition: opacity 0.3s ease-out;
  z-index: 2;
  pointer-events: none;
  /* Ensure it doesn't interfere with interactions */
}


/* end robot suggestions */

.asciiWrapper {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  mix-blend-mode: screen;
  /* font-size: var(--ascii-font-size);
  line-height: var(--ascii-line-height); */

}

.asciiArt {
  font-family: monospace;
  font-size: calc(var(--logo-width) * 0.005);
  /* line-height: var(--ascii-line-height); */
  line-height: 1;
  white-space: pre;
  font-weight: bolder;
  color: white;
  transform-origin: center;
  /* Ensure smooth scaling */
  transition: font-size 0.3s ease-out, line-height 0.3s ease-out;
  animation: glitch 4s ease-in-out infinite;

  /* Optimize performance by using transform3d to force GPU acceleration */
  transform: translate3d(0%, 0%, 0);
  will-change: transform, opacity;

  /* Add back the glow effect */
  filter: drop-shadow(0 0 10px rgba(85, 0, 255, 0.1)) drop-shadow(0 0 10px rgba(255, 46, 252, 0.0));

  @media (max-width: 768px) {
    filter: drop-shadow(0 0 10px rgba(10, 194, 35, 0.7));
  }

  @media (min-width: 769px) {
    animation: glitch 4s ease-in-out infinite;
  }

  @media (max-width: 768px) {
    animation:
      mobileMatrixFlicker 2s infinite step-end,
      mobileGlitchSkew 7s infinite linear;
  }
}

/* Reduce animation complexity on hover for mobile */
@media (hover: hover) {
  .container:hover .wrapper {
    transform: translate3d(0, 0, 0) scale(1.02);
  }
}

/* Simplified mobile animations */
@keyframes mobileMatrixFlicker {

  0%,
  95% {
    opacity: 1;
  }

  96% {
    opacity: 0.3;
  }

  100% {
    opacity: 1;
  }
}

@keyframes mobileGlitchSkew {

  0%,
  20%,
  23%,
  36%,
  38% {
    transform: translate3d(0, 0, 0) skew(0deg);
  }

  21.5% {
    transform: translate3d(0%, -50%, 0) skew(-50deg) translateZ(0);
  }

  22% {
    transform: translate3d(10%, 50%, 0) skew(0deg);
  }

  22.5% {
    transform: translate3d(0, 0, 0) skew(-40deg);
  }

  37% {
    transform: translate3d(0, 0, 0) skew(-40deg);
  }

  98% {
    transform: translate3d(0, 0, 0) skew(0deg);
  }

  99% {
    transform: translate3d(0, 0, 0) skew(90deg);
  }

  100% {
    transform: translate3d(0, 0, 0) skew(0deg);
  }
}

@keyframes warp {

  0%,
  100% {
    transform: skew(0deg);
  }

  50% {
    transform: skew(10deg);
  }
}

@keyframes glitch {

  0%,
  100% {
    opacity: 1;
    transform: skew(0deg);
    text-shadow: 0 0 50px #5500ff, 0 0 100px #e157de;
  }

  10% {
    transform: translate(0, 0);
  }

  11%,
  12% {
    transform: translate(15px, -8px);
  }

  13% {
    transform: translate(-18px, 8px);
    opacity: 1;
  }

  14% {
    transform: translate(0, 0);
    opacity: .5;
  }

  32% {
    opacity: 1;
  }

  33% {
    opacity: 0;
  }

  34% {
    opacity: 1;
  }

  /* Flashes */
  48% {
    opacity: 1;
  }

  49% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  50% {
    opacity: 1;
  }

  57% {
    opacity: 1;
  }

  58% {
    opacity: 0;
  }

  59% {
    opacity: 1;
  }

  /* Glitch moment */
  78% {
    transform: skew(0deg);
  }

  79% {
    transform: skew(30deg);
  }

  80% {
    transform: skew(-20deg);
  }

  81% {
    transform: skew(0deg);
  }

  /* Color shift */
  25% {
    text-shadow: 0 0 5px #ff00c3, 0 0 10px #1e8881;
  }

  50% {
    text-shadow: 0 0 20px #2ea548, 0 0 10px #dc0dfb;
  }

  75% {
    text-shadow: 0 0 20px #ff3939, 0 0 100px #39099b;
  }
}